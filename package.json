{
  "name": "aam-be-v1",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build && npm run copy:assets",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\" \"migrations/**/*.ts\"",
    "format:check": "prettier --check \"src/**/*.ts\" \"test/**/*.ts\" \"migrations/**/*.ts\"",
    "start": "cross-env NODE_ENV=a-env nest start && npm run copy:assets",
    "start:dev": "cross-env NODE_ENV=a-env nest start --watch",
    "start:debug": "cross-env NODE_ENV=a-env nest start --debug=0.0.0.0:9229 --watch",
    "start:prod": "node dist/src/main",
    "azure:start": "nest start",
    "azure:start:local": "NODE_ENV=a-env node src/main",
    "azure:start:dev": "NODE_ENV=d-env node src/main",
    "azure:start:test": "NODE_ENV=t-env node src/main",
    "azure:start:uat": "NODE_ENV=u-env node src/main",
    "azure:start:testk6": "NODE_ENV=tk6-env node src/main",
    "azure:start:generate-swagger:local": "NODE_ENV=a-env node dist/src/main --generate-swagger",
    "azure:start:generate-swagger:dev": "NODE_ENV=d-env node dist/src/main --generate-swagger",
    "azure:start:generate-swagger:test": "NODE_ENV=t-env node dist/src/main --generate-swagger",
    "lint": "eslint ./src --ext .js,.jsx,.ts,.tsx --max-warnings=0",
    "lint:noWarnings": "eslint \"{src,apps,libs,test,migrations}/**/*.ts\" --quiet --max-warnings=0",
    "lint:fix": "eslint \"{src,apps,libs,test,migrations}/**/*.ts\" --fix",
    "test": "cross-env NODE_ENV=a-test jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "npm run test:e2e:seed && npm run test:e2e:run && npm run test:e2e:cleanup",
    "test:e2e:run": "cross-env NODE_ENV=a-test jest --config ./test/e2e/jest-e2e.json",
    "test:e2e:seed": "npm run db:seed:a-test",
    "test:e2e:cleanup": "cross-env NODE_ENV=a-test npm run tsnode src/seed/e2e/cleanup.ts",
    "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
    "db:drop": "npm run db:drop:public && npm run db:drop:transformations",
    "db:drop:public": "npm run typeorm schema:drop",
    "db:drop:transformations": "npm run typeorm schema:drop -- --config=ormconfig.transformations.js",
    "db:drop:a": "cross-env NODE_ENV=a-env npm run db:drop",
    "db:migrate": "npm run typeorm migration:run",
    "db:migrate:a": "cross-env NODE_ENV=a-env npm run typeorm migration:run",
    "db:migrate:d": "cross-env NODE_ENV=d-env npm run typeorm migration:run",
    "db:migrate:t": "cross-env NODE_ENV=t-env npm run typeorm migration:run",
    "db:migrate:u": "cross-env NODE_ENV=u-env npm run typeorm migration:run",
    "tsnode": "ts-node -r tsconfig-paths/register",
    "db:seed": "npm run db:seed:essential && npm run db:seed:tenant && npm run db:seed:demo",
    "db:seed:essential": "npm run tsnode src/seed/seedEssential.ts",
    "db:seed:tenant": "npm run tsnode src/seed/seedTenant.ts",
    "db:seed:demo": "npm run tsnode src/seed/seedDemo.ts",
    "db:seed:a": "cross-env NODE_ENV=a-env npm run db:seed",
    "db:seed:demo:a": "cross-env NODE_ENV=a-env npm run db:seed:demo",
    "db:seed:a-test": "cross-env NODE_ENV=a-test npm run tsnode src/seed/e2e/seed.ts",
    "db:reset": "npm run db:drop && npm run db:migrate && npm run db:seed",
    "db:reset:a": "cross-env NODE_ENV=a-env npm run db:drop && cross-env NODE_ENV=a-env npm run db:migrate && cross-env NODE_ENV=a-env npm run db:seed",
    "db:reset:d": "cross-env NODE_ENV=d-env npm run db:drop && cross-env NODE_ENV=d-env npm run db:migrate && cross-env NODE_ENV=d-env npm run db:seed",
    "db:reset:t": "cross-env NODE_ENV=t-env npm run db:drop && cross-env NODE_ENV=t-env npm run db:migrate && cross-env NODE_ENV=t-env npm run db:seed",
    "db:reset:u": "cross-env NODE_ENV=u-env npm run db:drop && cross-env NODE_ENV=u-env npm run db:migrate && cross-env NODE_ENV=u-env npm run db:seed",
    "db:reset:a-test": "cross-env NODE_ENV=a-test npm run db:drop && cross-env NODE_ENV=a-test npm run db:migrate && cross-env NODE_ENV=a-test npm run db:seed",
    "db:reset:tk6": "cross-env NODE_ENV=tk6-env npm run db:drop && cross-env NODE_ENV=tk6-env npm run db:migrate && cross-env NODE_ENV=tk6-env npm run db:seed",
    "db:migrate:generate": "npm run typeorm -- migration:generate -n",
    "db:migrate:create:a": "cross-env NODE_ENV=a-env npm run typeorm -- migration:create -n",
    "db:revert:a": "cross-env NODE_ENV=a-env npm run typeorm -- migration:revert",
    "acs:reset": "ts-node src/scripts/resetAcs.script.ts",
    "acs:reset:a": "cross-env NODE_ENV=a-env ts-node src/scripts/resetAcs.script.ts",
    "acs:reset:d": "cross-env NODE_ENV=d-env ts-node src/scripts/resetAcs.script.ts",
    "acs:reset:t": "cross-env NODE_ENV=t-env ts-node src/scripts/resetAcs.script.ts",
    "acs:reset:u": "cross-env NODE_ENV=u-env ts-node src/scripts/resetAcs.script.ts",
    "copy:assets": "cpx 'src/lib/assets/**' 'dist/src/lib/assets'",
    "console:dev": "cross-env NODE_ENV=a-env ts-node -r tsconfig-paths/register src/console.ts",
    "generate:bulk:a": "cross-env NODE_ENV=a-env ts-node src/scripts/generateBulkMessages.script.ts"
  },
  "dependencies": {
    "@azure/service-bus": "7.4.0",
    "@azure/storage-blob": "^12.3.0",
    "@googlemaps/google-maps-services-js": "^3.3.2",
    "@nestjs/common": "7.4.4",
    "@nestjs/config": "0.5.0",
    "@nestjs/core": "7.4.4",
    "@nestjs/platform-express": "7.4.4",
    "@nestjs/schedule": "^0.4.1",
    "@nestjs/swagger": "4.8.2",
    "@nestjs/throttler": "^2.0.0",
    "@nestjs/typeorm": "7.1.3",
    "@sendgrid/client": "^7.4.2",
    "@sendgrid/mail": "^7.4.2",
    "adal-node": "^0.2.3",
    "applicationinsights": "^1.8.10",
    "axios": "^0.23.0",
    "cache-manager": "^3.4.0",
    "cache-manager-redis-store": "^2.0.0",
    "camelcase": "^6.2.0",
    "carbone": "^2.1.0",
    "class-transformer": "0.3.1",
    "class-validator": "0.12.2",
    "cpx": "^1.5.0",
    "cross-env": "7.0.2",
    "date-fns": "^2.28.0",
    "dotenv": "8.2.0",
    "ejs": "3.1.5",
    "elastic-apm-node": "^3.25.0",
    "export-to-csv": "^0.2.1",
    "fs": "0.0.1-security",
    "jsondiffpatch": "^0.4.1",
    "jsonwebtoken": "8.5.1",
    "jwks-rsa": "2.0.5",
    "lodash": "4.17.20",
    "logstash-client": "1.1.1",
    "mime-types": "^2.1.34",
    "multer": "^1.4.2",
    "node-cache": "^5.1.2",
    "nestjs-console": "^2.1.0",
    "node-mocks-http": "1.9.0",
    "path": "^0.12.7",
    "pg": "8.3.3",
    "readable-stream-clone": "0.0.7",
    "redis": "^3.1.2",
    "reflect-metadata": "0.1.13",
    "rimraf": "3.0.2",
    "rrule": "2.6.4",
    "rxjs": "6.6.2",
    "serialize-error": "7.0.1",
    "sharp": "^0.28.3",
    "slugify": "^1.6.1",
    "swagger-ui-express": "4.3.0",
    "tslint": "^6.1.3",
    "typeorm": "^0.2.45",
    "uuid": "^8.3.2",
    "xss": "^1.0.10"
  },
  "devDependencies": {
    "@nestjs/cli": "7.5.1",
    "@nestjs/schematics": "7.1.1",
    "@nestjs/testing": "7.4.4",
    "@types/cache-manager": "^2.10.3",
    "@types/carbone": "^1.2.0",
    "@types/ejs": "3.0.4",
    "@types/express": "4.17.8",
    "@types/jest": "26.0.12",
    "@types/jsonwebtoken": "8.5.0",
    "@types/lodash": "4.14.161",
    "@types/multer": "^1.4.4",
    "@types/node": "14.6.2",
    "@types/redis": "^2.8.32",
    "@types/serialize-error": "4.0.1",
    "@types/sharp": "^0.26.1",
    "@types/supertest": "2.0.10",
    "@typescript-eslint/eslint-plugin": "4.0.1",
    "@typescript-eslint/parser": "4.0.1",
    "eslint": "7.8.1",
    "eslint-config-prettier": "6.10.0",
    "jest": "26.4.2",
    "pre-commit": "1.2.2",
    "prettier": "2.1.1",
    "supertest": "4.0.2",
    "ts-jest": "26.3.0",
    "ts-node": "9.1.1",
    "tsconfig-paths": "3.9.0",
    "typescript": "4.0.2"
  },
  "pre-commit": [
    "format:check",
    "lint:noWarnings"
  ],
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".spec.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleDirectories": [
      "node_modules"
    ]
  }
}
